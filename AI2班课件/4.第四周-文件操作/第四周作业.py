# 1.总结文件操作，读取与写入的步骤与相关函数及用法
"""
打开一个"file.txt"文件（如果没有，系统会自动创建一个
    file(变量) = open(file.txt", mode="参数", encoding="utf-8)
    参数有：r:只读模式
            r+:读写模式，可以读取数据也可以写入数据
            rb:二进制只读，可以读取二进制数据，图片，声音，音频
            rb+:二进制读写模式
            w:只写模式
            wb:二进制只写，可以写入二进制数据，图片，声音，音频
            wb+:二进制写入模式
read():调用读取的方法，将文本中所有内容读取出来
readline():读取一行文本，会移动光标，下次读取从光标开始，调取一整行，包括结尾的换行符
readlines():读取多行数据，从光标开始一直到文本结束，会将每行数据，放入列表中
readable():文件是否能读取，默认使用 可读的打开模式，返回结果是布尔值
write():写入字符串，不是字符串，需要转化str；从光标往后写入
writelines():可以写入列表数据
writeable():判断是否能写入
close():关闭文件
seek():将文件的当前位置设置为偏移量
tell():返回文件的当前位置，即文件指针当前位置
"""
# 2.对比字符串，列表，字典，元组，集合，写出相似之处以及不同之处
# 总结上述类型相互转换，取值方法
"""
(1)列表：列表是可变对象，它支持在原处修改的操作，也可以通过指定的索引和分片获取元素。区别于元组，可动态增加，删除，更新，字符串具备列表的一些特点
(2)字符串：有和列表，元组一样的索引查看方法，但没有像列表那样的增删改的操作
(3)集合：集合中的元素是不可重复的且是不可变对象，列表，字典不可作为其元素
(4)元组：元组和列表在结构上没有区别，唯一的差异在于元组是只读的，不能修改，元组一旦定义其长度和内容都是固定的，一旦创建元组，则这个元组就不能被修改，即不能对元组进行更新，增加，删除操作。若想创建包含一个元素的元组，则必须在该元素后面加逗号","，否则创建的不是一个元组，而是一个字符串，可以作为字典的键
（5）字典：字典存储键值对数据，字典最外面用大括号，每一组用冒号连起来，然后各组用逗号隔开
str():可以将列表，字典，集合，字典，元组转化为字符串
list():可以将字符串，列表，字典，元组转化成列表
set():可以将字符串，列表，字典，元组转换成集合
dict():可以创建字典，不可把字符串，集合，列表转化为字典
tuple():将其他容器类型转换为元组
取值：字符串：可以循环，索引取值
    列表：可以循环，索引取值
    集合：可以循环，索引取值
    元组：可以循环，索引取值
    字典：可以循环取键值，按键取值
"# 3. 将<<望庐山瀑布>> w模式, 写入文件 libai.txt r模式读取文件, 将换行符去掉, 添加到列表中, 题目作为键, 列表作为值写入到新的文档中
f = open("libai.txt", "w", encoding="utf-8-")
fi = "望庐山瀑布\n日照香炉生紫烟，遥看瀑布挂前川。\n飞流直下三千尺，疑是银河落九天。"
f1 = f.write(fi)
f.seek(0)
f2 = open("libai.txt", "r", encoding="utf-8")
f3 = f2.read()
w = f3.split("\n")
f4 = open("写入.txt", "w+", encoding="utf-8")
f4.write(f"{w[0]}:{w[1:]}")
f.close()
f2.close()
f4.close()
# 4. 使用文件操作完成登陆验证, 文件中格式如:  账号-密码: 姓名, 性别,登陆后显示:    欢迎张三小哥哥/小姐姐 登陆使用
fa = open("student.txt", "w+", encoding="utf-8")
fa.write("2021123-123456:张三,男\n2021124-123457:李四,男\n2021125-123458:小美,女\n2021126-123459:小红,女")
fa.seek(0)
print("登录验证")
d = fa.readlines()
e = []
g = []
h = []
n = []
for stu in d:
    f = stu.strip().replace(":", "-").replace(",", "-").split("-")
    e.append(f[0])
    g.append(f[1])
    h.append(f[2])
    n.append(f[3])
zh = input("请输入你的账号：")
while zh not in e:
    print("你输入的账号错误")
    zh = input("请重新输入你的账号：")
ma = input("请输入你的密码：")
while ma not in g[e.index(zh)]:
    print("你输入密码错误")
    ma = input("请重新输入你的密码：")
name = input("请输入你的姓名：")
while name not in h[e.index(zh)]:
    print("你输入姓名错误")
    sex = input("请重新输入你的姓名：")
sex = input("请输入你的性别：")
while sex not in n[e.index(zh)]:
    print("你输入性别错误")
    sex = input("请重新输入你的性别：")
else:
    if sex == "女":
        print(f"欢迎{name}小姐姐登录使用")
    elif sex == "男":
        print(f"欢迎{name}小姐姐登录使用")
fa.close()
"""
